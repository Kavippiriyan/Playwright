{
  "config": {
    "configFile": "C:\\playwright\\playwright.config.ts",
    "rootDir": "C:/playwright",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "dot",
        null
      ],
      [
        "json",
        {
          "outputFile": "Json_Report/jsonReport.json"
        }
      ],
      [
        "html",
        {
          "open": "always"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 15000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "C:/playwright/test-results",
        "repeatEach": 1,
        "retries": 0,
        "id": "",
        "name": "",
        "testDir": "C:/playwright",
        "testIgnore": [],
        "testMatch": [
          "tests/Assertion.test.ts"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "version": "1.42.1",
    "workers": 2,
    "webServer": null
  },
  "suites": [
    {
      "title": "tests\\Assertion.test.ts",
      "file": "tests/Assertion.test.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "",
              "projectName": "",
              "results": [
                {
                  "workerIndex": 0,
                  "status": "failed",
                  "duration": 1624,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('input[id=\\'email\\']')\nExpected string: \u001b[32m\"Email address or phone number\u001b[7ms\u001b[27m\"\u001b[39m\nReceived string: \u001b[31m\"Email address or phone number\"\u001b[39m\nCall log:\n  \u001b[2m- expect.toHaveAttribute with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('input[id=\\'email\\']')\u001b[22m\n\u001b[2m  -   locator resolved to <input id=\"email\" type=\"text\" name=\"email\" autofocus=\"1…/>\u001b[22m\n\u001b[2m  -   unexpected value \"Email address or phone number\"\u001b[22m\n\u001b[2m  -   locator resolved to <input id=\"email\" type=\"text\" name=\"email\" autofocus=\"1…/>\u001b[22m\n\u001b[2m  -   unexpected value \"Email address or phone number\"\u001b[22m\n",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('input[id=\\'email\\']')\nExpected string: \u001b[32m\"Email address or phone number\u001b[7ms\u001b[27m\"\u001b[39m\nReceived string: \u001b[31m\"Email address or phone number\"\u001b[39m\nCall log:\n  \u001b[2m- expect.toHaveAttribute with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('input[id=\\'email\\']')\u001b[22m\n\u001b[2m  -   locator resolved to <input id=\"email\" type=\"text\" name=\"email\" autofocus=\"1…/>\u001b[22m\n\u001b[2m  -   unexpected value \"Email address or phone number\"\u001b[22m\n\u001b[2m  -   locator resolved to <input id=\"email\" type=\"text\" name=\"email\" autofocus=\"1…/>\u001b[22m\n\u001b[2m  -   unexpected value \"Email address or phone number\"\u001b[22m\n\n    at C:\\playwright\\tests\\Assertion.test.ts:13:19",
                    "location": {
                      "file": "C:\\playwright\\tests\\Assertion.test.ts",
                      "column": 19,
                      "line": 13
                    },
                    "snippet": "\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m     \u001b[90m// expect(input).toHaveAttribute(\"placeholder\",\"Email address or phone number\")\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m     expect(input)\u001b[33m.\u001b[39mtoHaveAttribute(\u001b[32m\"placeholder\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"Email address or phone numbers\"\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m })\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "C:\\playwright\\tests\\Assertion.test.ts",
                        "column": 19,
                        "line": 13
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('input[id=\\'email\\']')\nExpected string: \u001b[32m\"Email address or phone number\u001b[7ms\u001b[27m\"\u001b[39m\nReceived string: \u001b[31m\"Email address or phone number\"\u001b[39m\nCall log:\n  \u001b[2m- expect.toHaveAttribute with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('input[id=\\'email\\']')\u001b[22m\n\u001b[2m  -   locator resolved to <input id=\"email\" type=\"text\" name=\"email\" autofocus=\"1…/>\u001b[22m\n\u001b[2m  -   unexpected value \"Email address or phone number\"\u001b[22m\n\u001b[2m  -   locator resolved to <input id=\"email\" type=\"text\" name=\"email\" autofocus=\"1…/>\u001b[22m\n\u001b[2m  -   unexpected value \"Email address or phone number\"\u001b[22m\n\n\n\u001b[0m \u001b[90m 11 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m     \u001b[90m// expect(input).toHaveAttribute(\"placeholder\",\"Email address or phone number\")\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 13 |\u001b[39m     expect(input)\u001b[33m.\u001b[39mtoHaveAttribute(\u001b[32m\"placeholder\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"Email address or phone numbers\"\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 |\u001b[39m })\u001b[0m\n\n\u001b[2m    at C:\\playwright\\tests\\Assertion.test.ts:13:19\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-03-26T10:54:00.992Z",
                  "attachments": [
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "C:\\playwright\\test-results\\tests-Assertion-\\video.webm"
                    },
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "C:\\playwright\\test-results\\tests-Assertion-\\test-failed-1.png"
                    }
                  ],
                  "errorLocation": {
                    "file": "C:\\playwright\\tests\\Assertion.test.ts",
                    "column": 19,
                    "line": 13
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "0145556a736d8bac4db6-3aaae2c84ec65ffc6b61",
          "file": "tests/Assertion.test.ts",
          "line": 5,
          "column": 5
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2024-03-26T10:54:00.206Z",
    "duration": 4423.406999999999,
    "expected": 0,
    "skipped": 0,
    "unexpected": 1,
    "flaky": 0
  }
}